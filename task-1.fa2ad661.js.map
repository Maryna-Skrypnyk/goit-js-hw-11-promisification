{"version":3,"sources":["js/task-1.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then"],"mappings":";;;AAgB0B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,WAAA,EAhB1B,QAAA,qBAEO,IAAMA,EAAQ,SAAAC,GAEZ,OAAA,IAAIC,QAAQ,SAAAC,GACjBC,WAAW,WACCC,EAAOJ,IAChBA,MASmB,QAAA,MAAA,EALnB,IAAMI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAKA,QAAA,OAAA,EAF1BN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ","file":"task-1.fa2ad661.js","sourceRoot":"..\\src","sourcesContent":["import '../sass/main.scss';\r\n\r\nexport const delay = ms => {\r\n  // Мой код\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve = logger(ms);\r\n    }, ms);\r\n  });\r\n};\r\n\r\nexport const logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms\r\n"]}