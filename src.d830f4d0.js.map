{"version":3,"sources":["js/task-1.js","js/task-2.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table"],"mappings":";AAc0B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,WAAA,EAdnB,IAAMA,EAAQ,SAAAC,GAEZ,OAAA,IAAIC,QAAQ,SAAAC,GACjBC,WAAW,WACCC,EAAOJ,IAChBA,MASmB,QAAA,MAAA,EALnB,IAAMI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAKA,QAAA,OAAA,EAF1BN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ;;ACoBjB,aAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,OAAA,QAAA,gBAAA,QAAA,WAAA,EAlCO,IAAMK,EAAQ,CACnB,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IA8BzB,QAAA,MAAA,EA3BO,IAAMC,EAAkB,SAACC,EAAUC,GACjC,OAAA,IAAIb,QAAQ,SAAAC,GACjBA,EACEW,EAASE,IAAI,SAAAC,GACXA,OAAAA,EAAKN,OAASI,EAAgBE,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCL,QAASK,EAAKL,SAAWK,QAuBrE,QAAA,gBAAA,EAjBO,IAAMZ,EAAS,SAAAa,GAAgBX,OAAAA,QAAQY,MAAMD,IAiBpD,QAAA,OAAA,EAfAL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;;;ACdnC,aANA,IAAA,EAAA,EAAA,QAAA,gBAEA,EAAA,EAAA,QAAA,gBAIA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,QAAA","file":"src.d830f4d0.js","sourceRoot":"..\\src","sourcesContent":["export const delay = ms => {\r\n  // Мой код\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve = logger(ms);\r\n    }, ms);\r\n  });\r\n};\r\n\r\nexport const logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// Вызовы функции для проверки\r\ndelay(2000).then(logger); // Resolved after 2000ms\r\ndelay(1000).then(logger); // Resolved after 1000ms\r\ndelay(1500).then(logger); // Resolved after 1500ms\r\n","export const users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nexport const toggleUserState = (allUsers, userName) => {\r\n  return new Promise(resolve => {\r\n    resolve(\r\n      allUsers.map(user =>\r\n        user.name === userName ? { ...user, active: !user.active } : user,\r\n      ),\r\n    );\r\n  });\r\n};\r\n\r\nexport const logger = updatedUsers => console.table(updatedUsers);\r\n\r\ntoggleUserState(users, 'Mango').then(logger);\r\ntoggleUserState(users, 'Lux').then(logger);\r\n\r\n// Callback\r\n// const toggleUserState = (allUsers, userName, callback) => {\r\n//   const updatedUsers = allUsers.map(user =>\r\n//     user.name === userName ? { ...user, active: !user.active } : user,\r\n//   );\r\n\r\n//   callback(updatedUsers);\r\n// };\r\n\r\n// export const logger = updatedUsers => console.table(updatedUsers);\r\n\r\n// toggleUserState(users, 'Mango', logger);\r\n// toggleUserState(users, 'Lux', logger);\r\n","import task1 from './js/task-1';\n\nimport task2 from './js/task-2';\n\n// import task3 from './js/task-3';\n\nimport './sass/main.scss';\n"]}